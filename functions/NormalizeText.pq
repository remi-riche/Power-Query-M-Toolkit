/*
D√©veloppeur : R√©mi RICHE
Version : 2024.04.27.10
Email : r.riche@dataipa.com

Cette fonction Power Query M personnalis√©e, 'NormalizeText', est con√ßue pour normaliser le texte. Elle convertit le texte en minuscules, remplace les caract√®res accentu√©s et sp√©ciaux par leurs √©quivalents non accentu√©s, transforme les lettres stylis√©es en lettres standard, retire les emojis et autres symboles, et standardise les espaces (y compris les tabulations et les espaces multiples). Elle prend une cha√Æne de caract√®res en entr√©e (qui peut √™tre null) et retourne la cha√Æne normalis√©e.
*/

let
    NormalizeText = (inputText as nullable text) as text =>
    let
        // √âtape 1: Remplacer les valeurs null par une cha√Æne vide
        CheckedText = if inputText = null then "" else inputText,

        // √âtape 2: Convertir le texte en minuscules
        LowercaseText = Text.Lower(CheckedText),

        // √âtape 3: Remplacer les caract√®res accentu√©s et sp√©ciaux
        ReplaceAccents = 
            let
                // Table de remplacement des caract√®res accentu√©s et sp√©ciaux
                AccentReplacements = #table(
                    {"AccentedChar", "Replacement"},
                    {
                        // Lettres accentu√©es communes
                        {"√°", "a"}, {"√†", "a"}, {"√¢", "a"}, {"√§", "a"}, {"√£", "a"}, {"√•", "a"}, {"ƒÅ", "a"}, {"ƒÉ", "a"}, {"ƒÖ", "a"}, {"√¶", "ae"},
                        {"√ß", "c"}, {"ƒá", "c"}, {"ƒç", "c"}, {"ƒâ", "c"}, {"ƒã", "c"},
                        {"√©", "e"}, {"√®", "e"}, {"√™", "e"}, {"√´", "e"}, {"ƒì", "e"}, {"ƒó", "e"}, {"ƒô", "e"},
                        {"√≠", "i"}, {"√¨", "i"}, {"√Æ", "i"}, {"√Ø", "i"}, {"ƒ´", "i"}, {"ƒØ", "i"},
                        {"√±", "n"}, {"≈Ñ", "n"}, {"≈à", "n"}, {"≈Ü", "n"}, {"≈ã", "n"},
                        {"√≥", "o"}, {"√≤", "o"}, {"√¥", "o"}, {"√∂", "o"}, {"√µ", "o"}, {"√∏", "o"}, {"≈ç", "o"}, {"≈ë", "o"}, {"≈ì", "oe"}, {"√∞", "d"},
                        {"√ü", "ss"}, {"≈õ", "s"}, {"≈ù", "s"}, {"≈ü", "s"}, {"»ô", "s"}, {"≈°", "s"},
                        {"≈•", "t"}, {"≈£", "t"}, {"»õ", "t"}, {"√æ", "th"},
                        {"√∫", "u"}, {"√π", "u"}, {"√ª", "u"}, {"√º", "u"}, {"≈´", "u"}, {"≈Ø", "u"}, {"≈±", "u"}, {"≈≥", "u"},
                        {"√Ω", "y"}, {"√ø", "y"},
                        {"≈æ", "z"}, {"≈∫", "z"}, {"≈º", "z"},
                        {"ƒæ", "l"}, {"ƒ∫", "l"}, {"≈Ç", "l"},
                        {"ƒè", "d"}, {"ƒë", "d"},
                        {"ƒü", "g"}, {"ƒù", "g"}, {"ƒ°", "g"},
                        {"ƒß", "h"},
                        {"ƒµ", "j"},
                        {"≈ï", "r"}, {"≈ô", "r"},
                        {"¬µ", "u"},
                        {"Ô¨Å", "fi"}, {"Ô¨Ç", "fl"}
                        // Ajouter d'autres remplacements si n√©cessaire
                    }
                ),

                // Convertir la table en liste de records
                AccentReplacementsList = Table.ToRecords(AccentReplacements),

                // Fonction pour remplacer les caract√®res accentu√©s
                ReplaceAccentsFunc = (text as text) as text =>
                    List.Accumulate(
                        AccentReplacementsList,
                        text,
                        (state, current) => Text.Replace(state, current[AccentedChar], current[Replacement])
                    )
            in
                ReplaceAccentsFunc(LowercaseText),

        // √âtape 4: Remplacer les lettres stylis√©es par des lettres standard
        ReplaceStylized = 
            let
                // Table de remplacement des caract√®res stylis√©s
                StylizedReplacements = #table(
                    {"StylizedChar", "Replacement"},
                    {
                        // Lettres math√©matiques gras italique (Bold Italic) majuscules
                        {"ùë®", "a"}, {"ùë©", "b"}, {"ùë™", "c"}, {"ùë´", "d"}, {"ùë¨", "e"}, {"ùë≠", "f"}, {"ùëÆ", "g"},
                        {"ùëØ", "h"}, {"ùë∞", "i"}, {"ùë±", "j"}, {"ùë≤", "k"}, {"ùë≥", "l"}, {"ùë¥", "m"}, {"ùëµ", "n"},
                        {"ùë∂", "o"}, {"ùë∑", "p"}, {"ùë∏", "q"}, {"ùëπ", "r"}, {"ùë∫", "s"}, {"ùëª", "t"}, {"ùëº", "u"},
                        {"ùëΩ", "v"}, {"ùëæ", "w"}, {"ùëø", "x"}, {"ùíÄ", "y"}, {"ùíÅ", "z"},
                        // Lettres math√©matiques gras italique (Bold Italic) minuscules
                        {"ùíÇ", "a"}, {"ùíÉ", "b"}, {"ùíÑ", "c"}, {"ùíÖ", "d"}, {"ùíÜ", "e"}, {"ùíá", "f"}, {"ùíà", "g"},
                        {"ùíâ", "h"}, {"ùíä", "i"}, {"ùíã", "j"}, {"ùíå", "k"}, {"ùíç", "l"}, {"ùíé", "m"}, {"ùíè", "n"},
                        {"ùíê", "o"}, {"ùíë", "p"}, {"ùíí", "q"}, {"ùíì", "r"}, {"ùíî", "s"}, {"ùíï", "t"}, {"ùíñ", "u"},
                        {"ùíó", "v"}, {"ùíò", "w"}, {"ùíô", "x"}, {"ùíö", "y"}, {"ùíõ", "z"},
                        // Ajout des autres lettres stylis√©es pr√©c√©demment incluses
                        // Fraktur Letters
                        {"ùîû", "a"}, {"ùîü", "b"}, {"ùî†", "c"}, {"ùî°", "d"}, {"ùî¢", "e"}, {"ùî£", "f"}, {"ùî§", "g"},
                        {"ùî•", "h"}, {"ùî¶", "i"}, {"ùîß", "j"}, {"ùî®", "k"}, {"ùî©", "l"}, {"ùî™", "m"}, {"ùî´", "n"},
                        {"ùî¨", "o"}, {"ùî≠", "p"}, {"ùîÆ", "q"}, {"ùîØ", "r"}, {"ùî∞", "s"}, {"ùî±", "t"}, {"ùî≤", "u"},
                        {"ùî≥", "v"}, {"ùî¥", "w"}, {"ùîµ", "x"}, {"ùî∂", "y"}, {"ùî∑", "z"},
                        {"ùîÑ", "a"}, {"ùîÖ", "b"}, {"ùîá", "d"}, {"ùîà", "e"}, {"ùîâ", "f"}, {"ùîä", "g"}, {"ùîç", "j"},
                        {"ùîé", "k"}, {"ùîè", "l"}, {"ùîê", "m"}, {"ùîë", "n"}, {"ùîí", "o"}, {"ùîì", "p"}, {"ùîî", "q"},
                        {"ùîñ", "s"}, {"ùîó", "t"}, {"ùîò", "u"}, {"ùîô", "v"}, {"ùîö", "w"}, {"ùîõ", "x"}, {"ùîú", "y"},
                        // Script Letters
                        {"ùì™", "a"}, {"ùì´", "b"}, {"ùì¨", "c"}, {"ùì≠", "d"}, {"ùìÆ", "e"}, {"ùìØ", "f"}, {"ùì∞", "g"},
                        {"ùì±", "h"}, {"ùì≤", "i"}, {"ùì≥", "j"}, {"ùì¥", "k"}, {"ùìµ", "l"}, {"ùì∂", "m"}, {"ùì∑", "n"},
                        {"ùì∏", "o"}, {"ùìπ", "p"}, {"ùì∫", "q"}, {"ùìª", "r"}, {"ùìº", "s"}, {"ùìΩ", "t"}, {"ùìæ", "u"},
                        {"ùìø", "v"}, {"ùîÄ", "w"}, {"ùîÅ", "x"}, {"ùîÇ", "y"}, {"ùîÉ", "z"},
                        {"ùìê", "a"}, {"ùìë", "b"}, {"ùìí", "c"}, {"ùìì", "d"}, {"ùìî", "e"}, {"ùìï", "f"}, {"ùìñ", "g"},
                        {"ùìó", "h"}, {"ùìò", "i"}, {"ùìô", "j"}, {"ùìö", "k"}, {"ùìõ", "l"}, {"ùìú", "m"}, {"ùìù", "n"},
                        {"ùìû", "o"}, {"ùìü", "p"}, {"ùì†", "q"}, {"ùì°", "r"}, {"ùì¢", "s"}, {"ùì£", "t"}, {"ùì§", "u"},
                        {"ùì•", "v"}, {"ùì¶", "w"}, {"ùìß", "x"}, {"ùì®", "y"}, {"ùì©", "z"},
                        // Autres caract√®res stylis√©s
                        {"‚ô°", " "}, {"‚ù§", " "}, {"‚ô•", " "}, {"‚òÖ", " "}, {"‚òÜ", " "}
                        // Ajouter d'autres remplacements si n√©cessaire
                    }
                ),

                // Convertir la table en liste de records
                StylizedReplacementsList = Table.ToRecords(StylizedReplacements),

                // Fonction pour remplacer les caract√®res stylis√©s
                ReplaceStylizedFunc = (text as text) as text =>
                    List.Accumulate(
                        StylizedReplacementsList,
                        text,
                        (state, current) => Text.Replace(state, current[StylizedChar], current[Replacement])
                    )
            in
                ReplaceStylizedFunc(ReplaceAccents),

        // √âtape 5: Supprimer les emojis et autres symboles en conservant uniquement les lettres a-z, les chiffres 0-9 et les espaces
        RemoveEmojisAndSymbols = Text.Select(ReplaceStylized, {"a".."z", "0".."9", " "}),
    
        // √âtape 6: Remplacer les ponctuations et les caract√®res de contr√¥le par des espaces
        ReplacePunctuations = 
            let
                Punctuations = {".", ",", ";", ":", "!", "?", "(", ")", "[", "]", "{", "}", "<", ">", "/", "\\", "|", "@", "#", "$", "%", "^", "&", "*", "+", "=", "~", "`", "'", "'"},
                ReplaceWithSpace = List.Accumulate(
                    Punctuations, 
                    RemoveEmojisAndSymbols, 
                    (state, punctuation) => Text.Replace(state, punctuation, " ")
                )
            in
                ReplaceWithSpace,

        // √âtape 7: Remplacer les caract√®res de contr√¥le (tabulations, retours √† la ligne, etc.) par des espaces
        ReplaceControlChars = Text.Replace(ReplacePunctuations, "#(cr)", " "),
        ReplaceControlChars2 = Text.Replace(ReplaceControlChars, "#(lf)", " "),
        ReplaceControlChars3 = Text.Replace(ReplaceControlChars2, "#(tab)", " "),
        ReplaceControlCharsFinal = ReplaceControlChars3,

        // √âtape 8: Remplacer les multiples espaces par un seul espace
        SimplifiedText = Text.Combine(List.Select(Text.Split(ReplaceControlCharsFinal, " "), each _ <> ""), " "),

        // √âtape 9: Supprimer les espaces en d√©but et fin de cha√Æne
        TrimmedText = Text.Trim(SimplifiedText)
    in
        TrimmedText
in
    NormalizeText
